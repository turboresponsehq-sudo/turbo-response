<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Admin Dashboard - Rapid Response AI</title>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700;800;900&display=swap" rel="stylesheet">
    <style>
        :root {
            --primary-gradient: linear-gradient(135deg, #0f172a 0%, #1e293b 50%, #334155 100%);
            --accent-cyan: #06b6d4;
            --accent-blue: #3b82f6;
            --accent-green: #10b981;
            --accent-yellow: #eab308;
            --accent-red: #ef4444;
            --text-primary: #f8fafc;
            --text-secondary: #cbd5e1;
            --text-muted: #64748b;
            --glow-cyan: 0 0 20px rgba(6, 182, 212, 0.3);
            --glow-blue: 0 0 20px rgba(59, 130, 246, 0.3);
            --glow-green: 0 0 20px rgba(16, 185, 129, 0.3);
            --card-bg: rgba(15, 23, 42, 0.8);
            --border-glow: rgba(6, 182, 212, 0.2);
            --input-bg: rgba(30, 41, 59, 0.5);
            --input-border: rgba(6, 182, 212, 0.3);
        }

        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Inter', -apple-system, BlinkMacSystemFont, sans-serif;
            background: var(--primary-gradient);
            color: var(--text-primary);
            line-height: 1.6;
            min-height: 100vh;
        }

        /* Animated Background */
        .bg-animation {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            z-index: -1;
            opacity: 0.1;
        }

        .bg-grid {
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background-image: 
                linear-gradient(rgba(6, 182, 212, 0.1) 1px, transparent 1px),
                linear-gradient(90deg, rgba(6, 182, 212, 0.1) 1px, transparent 1px);
            background-size: 50px 50px;
            animation: gridMove 20s linear infinite;
        }

        @keyframes gridMove {
            0% { transform: translate(0, 0); }
            100% { transform: translate(50px, 50px); }
        }

        /* Header */
        .header {
            padding: 20px 0;
            background: rgba(15, 23, 42, 0.9);
            backdrop-filter: blur(10px);
            border-bottom: 1px solid var(--border-glow);
        }

        .nav-container {
            max-width: 1400px;
            margin: 0 auto;
            padding: 0 20px;
            display: flex;
            justify-content: space-between;
            align-items: center;
        }

        .logo {
            display: flex;
            align-items: center;
            font-size: 1.5rem;
            font-weight: 800;
            color: var(--text-primary);
            text-decoration: none;
        }

        .logo-icon {
            width: 32px;
            height: 32px;
            margin-right: 12px;
            background: linear-gradient(135deg, var(--accent-yellow) 0%, var(--accent-cyan) 100%);
            border-radius: 8px;
            display: flex;
            align-items: center;
            justify-content: center;
            box-shadow: var(--glow-cyan);
        }

        .admin-badge {
            display: flex;
            align-items: center;
            padding: 8px 16px;
            background: rgba(16, 185, 129, 0.1);
            border: 1px solid var(--accent-green);
            border-radius: 20px;
            font-size: 0.9rem;
            color: var(--accent-green);
            box-shadow: var(--glow-green);
        }

        /* Main Container */
        .container {
            max-width: 1400px;
            margin: 0 auto;
            padding: 40px 20px;
        }

        .dashboard-header {
            margin-bottom: 40px;
        }

        .dashboard-title {
            font-size: 2.5rem;
            font-weight: 800;
            margin-bottom: 10px;
            background: linear-gradient(135deg, var(--text-primary) 0%, var(--accent-cyan) 50%, var(--accent-blue) 100%);
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            background-clip: text;
        }

        .dashboard-subtitle {
            font-size: 1.1rem;
            color: var(--text-secondary);
        }

        /* Stats Grid */
        .stats-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
            gap: 20px;
            margin-bottom: 40px;
        }

        .stat-card {
            background: var(--card-bg);
            border: 1px solid var(--border-glow);
            border-radius: 15px;
            padding: 25px;
            backdrop-filter: blur(10px);
            transition: all 0.3s ease;
        }

        .stat-card:hover {
            transform: translateY(-2px);
            box-shadow: var(--glow-cyan);
        }

        .stat-value {
            font-size: 2.5rem;
            font-weight: 800;
            color: var(--accent-cyan);
            margin-bottom: 5px;
        }

        .stat-label {
            color: var(--text-secondary);
            font-weight: 500;
        }

        .stat-icon {
            float: right;
            font-size: 1.5rem;
            opacity: 0.7;
        }

        /* Manual Approval Section */
        .manual-approval {
            background: var(--card-bg);
            border: 1px solid var(--border-glow);
            border-radius: 15px;
            padding: 30px;
            margin-bottom: 40px;
            backdrop-filter: blur(10px);
        }

        .section-title {
            font-size: 1.3rem;
            font-weight: 700;
            color: var(--accent-cyan);
            margin-bottom: 20px;
            display: flex;
            align-items: center;
        }

        .section-icon {
            margin-right: 10px;
            font-size: 1.2rem;
        }

        .approval-form {
            display: flex;
            gap: 15px;
            align-items: end;
        }

        .form-group {
            flex: 1;
        }

        .form-label {
            display: block;
            font-weight: 600;
            color: var(--text-primary);
            margin-bottom: 8px;
            font-size: 0.95rem;
        }

        .form-input {
            width: 100%;
            padding: 12px 16px;
            background: var(--input-bg);
            border: 1px solid var(--input-border);
            border-radius: 8px;
            color: var(--text-primary);
            font-size: 1rem;
            transition: all 0.3s ease;
        }

        .form-input:focus {
            outline: none;
            border-color: var(--accent-cyan);
            box-shadow: var(--glow-cyan);
        }

        .btn {
            padding: 12px 24px;
            border: none;
            border-radius: 8px;
            font-weight: 600;
            cursor: pointer;
            transition: all 0.3s ease;
            text-decoration: none;
            display: inline-block;
            text-align: center;
        }

        .btn-primary {
            background: linear-gradient(135deg, var(--accent-cyan) 0%, var(--accent-blue) 100%);
            color: white;
            box-shadow: var(--glow-blue);
        }

        .btn-primary:hover {
            transform: translateY(-1px);
            box-shadow: 0 5px 20px rgba(59, 130, 246, 0.4);
        }

        .btn-success {
            background: linear-gradient(135deg, var(--accent-green) 0%, #059669 100%);
            color: white;
            box-shadow: var(--glow-green);
        }

        .btn-danger {
            background: linear-gradient(135deg, var(--accent-red) 0%, #dc2626 100%);
            color: white;
        }

        /* Payment Info Section */
        .payment-info-section {
            background: var(--card-bg);
            border: 1px solid var(--border-glow);
            border-radius: 15px;
            padding: 30px;
            backdrop-filter: blur(10px);
            margin-bottom: 30px;
        }

        .payment-info-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
            gap: 20px;
        }

        .payment-info-card {
            background: var(--input-bg);
            border: 1px solid var(--input-border);
            border-radius: 12px;
            padding: 25px;
            text-align: center;
            transition: all 0.3s ease;
        }

        .payment-info-card:hover {
            border-color: var(--accent-cyan);
            box-shadow: var(--glow-cyan);
            transform: translateY(-2px);
        }

        .payment-info-icon {
            font-size: 2.5rem;
            margin-bottom: 10px;
        }

        .payment-info-card h3 {
            font-size: 1.1rem;
            font-weight: 700;
            color: var(--text-primary);
            margin-bottom: 8px;
        }

        .payment-info-handle {
            font-size: 1rem;
            color: var(--accent-cyan);
            font-weight: 600;
            font-family: 'Courier New', monospace;
            margin-bottom: 15px;
        }

        .btn-secondary {
            background: rgba(6, 182, 212, 0.1);
            color: var(--accent-cyan);
            border: 1px solid var(--accent-cyan);
        }

        .btn-secondary:hover {
            background: rgba(6, 182, 212, 0.2);
            transform: translateY(-1px);
        }

        /* Modal Styles */
        .modal {
            display: none;
            position: fixed;
            z-index: 1000;
            left: 0;
            top: 0;
            width: 100%;
            height: 100%;
            background-color: rgba(0, 0, 0, 0.8);
            backdrop-filter: blur(5px);
        }

        .modal-content {
            background: var(--card-bg);
            border: 1px solid var(--border-glow);
            margin: 5% auto;
            padding: 0;
            width: 90%;
            max-width: 700px;
            border-radius: 15px;
            box-shadow: 0 10px 50px rgba(0, 0, 0, 0.5);
            max-height: 85vh;
            overflow-y: auto;
        }

        .modal-header {
            background: linear-gradient(135deg, var(--accent-cyan) 0%, var(--accent-blue) 100%);
            padding: 20px 30px;
            border-radius: 15px 15px 0 0;
            display: flex;
            justify-content: space-between;
            align-items: center;
        }

        .modal-header h2 {
            margin: 0;
            color: white;
            font-size: 1.5rem;
        }

        .close {
            color: white;
            font-size: 28px;
            font-weight: bold;
            cursor: pointer;
            transition: all 0.3s ease;
        }

        .close:hover {
            transform: scale(1.2);
        }

        .modal-body {
            padding: 30px;
        }

        .detail-row {
            margin-bottom: 20px;
            padding-bottom: 20px;
            border-bottom: 1px solid var(--border-glow);
        }

        .detail-row:last-child {
            border-bottom: none;
        }

        .detail-label {
            font-weight: 600;
            color: var(--accent-cyan);
            font-size: 0.9rem;
            text-transform: uppercase;
            letter-spacing: 0.5px;
            margin-bottom: 8px;
        }

        .detail-value {
            color: var(--text-primary);
            font-size: 1rem;
            line-height: 1.6;
        }

        .contract-signature {
            background: rgba(6, 182, 212, 0.05);
            border-left: 3px solid var(--accent-cyan);
            padding: 15px;
            border-radius: 8px;
            margin-top: 10px;
        }

        /* Cases Table */
        .cases-section {
            background: var(--card-bg);
            border: 1px solid var(--border-glow);
            border-radius: 15px;
            padding: 30px;
            backdrop-filter: blur(10px);
        }

        .table-container {
            overflow-x: auto;
        }

        .cases-table {
            width: 100%;
            border-collapse: collapse;
            margin-top: 20px;
        }

        .cases-table th,
        .cases-table td {
            padding: 15px;
            text-align: left;
            border-bottom: 1px solid var(--border-glow);
        }

        .cases-table th {
            background: rgba(6, 182, 212, 0.1);
            color: var(--accent-cyan);
            font-weight: 600;
            font-size: 0.9rem;
            text-transform: uppercase;
            letter-spacing: 0.5px;
        }

        .cases-table td {
            color: var(--text-secondary);
        }

        .cases-table tr:hover {
            background: rgba(6, 182, 212, 0.05);
        }

        .status-badge {
            padding: 4px 12px;
            border-radius: 20px;
            font-size: 0.8rem;
            font-weight: 600;
            text-transform: uppercase;
        }

        .status-submitted {
            background: rgba(234, 179, 8, 0.2);
            color: var(--accent-yellow);
            border: 1px solid var(--accent-yellow);
        }

        .status-paid {
            background: rgba(16, 185, 129, 0.2);
            color: var(--accent-green);
            border: 1px solid var(--accent-green);
        }

        .status-approved {
            background: rgba(59, 130, 246, 0.2);
            color: var(--accent-blue);
            border: 1px solid var(--accent-blue);
        }

        .category-badge {
            padding: 4px 8px;
            background: rgba(139, 92, 246, 0.1);
            border: 1px solid #8b5cf6;
            border-radius: 6px;
            font-size: 0.8rem;
            color: #8b5cf6;
        }

        .action-buttons {
            display: flex;
            gap: 8px;
        }

        .btn-sm {
            padding: 6px 12px;
            font-size: 0.8rem;
        }

        /* Loading States */
        .loading {
            text-align: center;
            padding: 40px;
            color: var(--text-muted);
        }

        .spinner {
            display: inline-block;
            width: 20px;
            height: 20px;
            border: 2px solid var(--border-glow);
            border-radius: 50%;
            border-top-color: var(--accent-cyan);
            animation: spin 1s ease-in-out infinite;
        }

        @keyframes spin {
            to { transform: rotate(360deg); }
        }

        /* Responsive */
        @media (max-width: 768px) {
            .dashboard-title {
                font-size: 2rem;
            }
            
            .stats-grid {
                grid-template-columns: 1fr;
            }
            
            .approval-form {
                flex-direction: column;
                align-items: stretch;
            }
            
            .cases-table {
                font-size: 0.9rem;
            }
        }
    </style>
</head>
<body>
    <!-- Animated Background -->
    <div class="bg-animation">
        <div class="bg-grid"></div>
    </div>

    <!-- Header -->
    <header class="header">
        <div class="nav-container">
            <a href="/" class="logo">
                <div class="logo-icon">⚡</div>
                TURBO RESPONSE
            </a>
            <div class="admin-badge">
                🤖 Admin Dashboard
                <button class="btn btn-secondary btn-sm" onclick="logout()" style="margin-left: 15px;">
                    🔒 Logout
                </button>
            </div>
        </div>
    </header>

    <!-- Main Container -->
    <div class="container">
        <div class="dashboard-header">
            <h1 class="dashboard-title">AI Command Center</h1>
            <p class="dashboard-subtitle">
                Monitor and manage all consumer defense cases with AI-powered insights
            </p>
        </div>

        <!-- Stats Grid -->
        <div class="stats-grid">
            <div class="stat-card">
                <div class="stat-icon">📊</div>
                <div class="stat-value" id="totalCases">0</div>
                <div class="stat-label">Total Cases</div>
            </div>
            <div class="stat-card">
                <div class="stat-icon">⏳</div>
                <div class="stat-value" id="pendingCases">0</div>
                <div class="stat-label">Pending Review</div>
            </div>
            <div class="stat-card">
                <div class="stat-icon">✅</div>
                <div class="stat-value" id="approvedToday">0</div>
                <div class="stat-label">Approved Today</div>
            </div>
            <div class="stat-card">
                <div class="stat-icon">⚡</div>
                <div class="stat-value">18h</div>
                <div class="stat-label">Avg Response Time</div>
            </div>
        </div>

        <!-- Manual Approval Section -->
        <div class="manual-approval">
            <h2 class="section-title">
                <span class="section-icon">💳</span>
                Manual Payment Approval
            </h2>
            <p style="color: var(--text-secondary); margin-bottom: 20px;">
                Approve clients who paid via Cash App or other direct methods
            </p>
            <div class="approval-form">
                <div class="form-group">
                    <label class="form-label" for="clientEmail">Client Email</label>
                    <input type="email" id="clientEmail" class="form-input" 
                           placeholder="client@example.com">
                </div>
                <div class="form-group">
                    <label class="form-label" for="paymentMethod">Payment Method</label>
                    <select id="paymentMethod" class="form-input">
                        <option value="cash_app">Cash App</option>
                        <option value="venmo">Venmo</option>
                        <option value="zelle">Zelle</option>
                        <option value="paypal">PayPal Direct</option>
                        <option value="other">Other</option>
                    </select>
                </div>
                <button class="btn btn-primary" onclick="approveClient()">
                    ✅ Approve Client
                </button>
            </div>
        </div>

        <!-- Payment Information Section -->
        <div class="payment-info-section">
            <h2 class="section-title">
                <span class="section-icon">💳</span>
                Payment Information
            </h2>
            <p style="color: var(--text-secondary); margin-bottom: 30px;">
                Share these payment details with approved clients
            </p>
            <div class="payment-info-grid">
                <div class="payment-info-card">
                    <div class="payment-info-icon">💵</div>
                    <h3>Cash App</h3>
                    <p class="payment-info-handle">$turboresponsehq</p>
                    <button class="btn btn-secondary btn-sm" onclick="copyToClipboard('$turboresponsehq')">📋 Copy</button>
                </div>
                <div class="payment-info-card">
                    <div class="payment-info-icon">💚</div>
                    <h3>Venmo</h3>
                    <p class="payment-info-handle">@Moneybossesapparel</p>
                    <button class="btn btn-secondary btn-sm" onclick="copyToClipboard('@Moneybossesapparel')">📋 Copy</button>
                </div>
                <div class="payment-info-card">
                    <div class="payment-info-icon">💙</div>
                    <h3>PayPal</h3>
                    <p class="payment-info-handle">Money Bosses Association</p>
                    <button class="btn btn-secondary btn-sm" onclick="copyToClipboard('Money Bosses Association')">📋 Copy</button>
                </div>
            </div>
            <div style="margin-top: 30px; padding: 20px; background: rgba(6, 182, 212, 0.05); border-left: 3px solid var(--accent-cyan); border-radius: 8px;">
                <p style="color: var(--text-primary); font-weight: 600; margin-bottom: 8px;">💳 Payment Plans Available</p>
                <p style="color: var(--text-secondary); font-size: 0.9rem; margin: 0;">
                    Clients can use <strong style="color: var(--accent-cyan);">PayPal Pay in 4</strong> to split payments into 4 interest-free installments (no extra setup needed - they select this option when paying via PayPal)
                </p>
            </div>
        </div>

        <!-- Cases Section -->
        <div class="cases-section">
            <h2 class="section-title">
                <span class="section-icon">📋</span>
                Case Management
            </h2>
            
            <div class="table-container">
                <table class="cases-table">
                    <thead>
                        <tr>
                            <th>Name</th>
                            <th>Email</th>
                            <th>Category</th>
                            <th>Description</th>
                            <th>Payment Status</th>
                            <th>Case Status</th>
                            <th>Created</th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                    <tbody id="casesTableBody">
                        <tr>
                            <td colspan="8" class="loading">
                                <div class="spinner"></div>
                                Loading cases...
                            </td>
                        </tr>
                    </tbody>
                </table>
            </div>
        </div>
    </div>

    <!-- Case Details Modal -->
    <div id="caseModal" class="modal">
        <div class="modal-content">
            <div class="modal-header">
                <h2>📋 Case Details</h2>
                <span class="close" onclick="closeModal()">&times;</span>
            </div>
            <div class="modal-body" id="modalBody">
                <!-- Content will be dynamically loaded here -->
            </div>
        </div>
    </div>

    <script>
        // Global variables
        let cases = [];

        // Check authentication before loading dashboard
        document.addEventListener('DOMContentLoaded', function() {
            verifySession();
        });

        // Verify admin session
        async function verifySession() {
            const session = localStorage.getItem('admin_session');
            
            if (!session) {
                window.location.href = '/admin_login.html';
                return;
            }
            
            try {
                const response = await fetch('/api/admin/verify', {
                    headers: {
                        'Authorization': 'Bearer ' + session
                    }
                });
                
                const data = await response.json();
                
                if (!data.success) {
                    localStorage.removeItem('admin_session');
                    window.location.href = '/admin_login.html';
                    return;
                }
                
                // Session valid, load dashboard
                loadCases();
                setInterval(loadCases, 30000); // Refresh every 30 seconds
                
            } catch (error) {
                console.error('Session verification failed:', error);
                localStorage.removeItem('admin_session');
                window.location.href = '/admin_login.html';
            }
        }

        // Load cases from API
        async function loadCases() {
            try {
                const response = await fetch('/api/admin/cases');
                const data = await response.json();
                
                if (data.success) {
                    cases = data.cases;
                    updateStats(data);
                    renderCasesTable();
                } else {
                    console.error('Failed to load cases:', data.error);
                }
            } catch (error) {
                console.error('Error loading cases:', error);
            }
        }

        // Update dashboard stats
        function updateStats(data) {
            document.getElementById('totalCases').textContent = data.total || 0;
            document.getElementById('pendingCases').textContent = data.pending || 0;
            document.getElementById('approvedToday').textContent = data.approved || 0;
        }

        // Render cases table
        function renderCasesTable() {
            const tbody = document.getElementById('casesTableBody');
            
            if (cases.length === 0) {
                tbody.innerHTML = `
                    <tr>
                        <td colspan="8" style="text-align: center; color: var(--text-muted);">
                            No cases found
                        </td>
                    </tr>
                `;
                return;
            }

            tbody.innerHTML = cases.map(case_ => `
                <tr>
                    <td><strong>${case_.case_id ? case_.case_id.substring(0, 8) : 'N/A'}</strong></td>
                    <td>${case_.contact_info?.email || 'N/A'}</td>
                    <td><span class="category-badge">${case_.case_details?.category || 'N/A'}</span></td>
                    <td>${case_.case_details?.description ? case_.case_details.description.substring(0, 50) + '...' : 'N/A'}</td>
                    <td><span class="status-badge status-${case_.payment_status || 'pending'}">${case_.payment_status || 'Pending'}</span></td>
                    <td><span class="status-badge status-${case_.status || 'submitted'}">${case_.status || 'Submitted'}</span></td>
                    <td>${case_.timestamp ? new Date(case_.timestamp).toLocaleDateString() : 'N/A'}</td>
                    <td>
                        <div class="action-buttons">
                            <button class="btn btn-primary btn-sm" onclick="viewCase('${case_.case_id}')">👁️ View Details</button>
                            ${case_.payment_status !== 'paid' && !case_.payment_link ? 
                                `<button class="btn btn-primary btn-sm" onclick="generatePaymentLink('${case_.case_id}')">💳 Generate Payment Link</button>` : 
                                ''
                            }
                            ${case_.payment_link && case_.payment_link.status === 'pending' ? 
                                `<button class="btn btn-secondary btn-sm" onclick="copyPaymentLink('${case_.payment_link.token}')">📋 Copy Payment Link</button>` : 
                                ''
                            }
                            ${case_.payment_status !== 'paid' ? 
                                `<button class="btn btn-success btn-sm" onclick="markPaid('${case_.case_id}')">Mark Paid</button>` : 
                                ''
                            }
                            ${case_.document_path ? 
                                `<button class="btn btn-info btn-sm" onclick="viewDocuments('${case_.case_id}')">View Docs</button>` : 
                                ''
                            }
                        </div>
                    </td>
                </tr>
            `).join('');
        }

        // Approve client manually
        async function approveClient() {
            const email = document.getElementById('clientEmail').value;
            const paymentMethod = document.getElementById('paymentMethod').value;

            if (!email) {
                alert('Please enter client email');
                return;
            }

            try {
                const response = await fetch('/api/admin/manual_approval', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({
                        email: email,
                        payment_method: paymentMethod
                    })
                });

                const data = await response.json();

                if (data.success) {
                    alert(`✅ Client ${email} approved for case submission!`);
                    document.getElementById('clientEmail').value = '';
                    loadCases(); // Refresh cases
                } else {
                    alert('❌ Error: ' + data.error);
                }
            } catch (error) {
                alert('❌ Error approving client: ' + error.message);
            }
        }

        // Mark case as paid
        async function markPaid(caseId) {
            try {
                const response = await fetch('/api/admin/mark-paid', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({
                        case_id: caseId,
                        payment_method: 'manual'
                    })
                });

                const data = await response.json();

                if (data.success) {
                    alert('✅ Case marked as paid!');
                    loadCases(); // Refresh cases
                } else {
                    alert('❌ Error: ' + data.error);
                }
            } catch (error) {
                alert('❌ Error marking case as paid: ' + error.message);
            }
        }

        // Approve case
        async function approveCase(caseId) {
            if (!confirm('Are you sure you want to approve this case and generate the document?')) {
                return;
            }

            try {
                const response = await fetch('/api/admin/approve-case', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({
                        case_id: caseId
                    })
                });

                const data = await response.json();

                if (data.success) {
                    alert('✅ Case approved and document generated!');
                    loadCases(); // Refresh cases
                } else {
                    alert('❌ Error: ' + data.error);
                }
            } catch (error) {
                alert('❌ Error approving case: ' + error.message);
            }
        }

        // View case details in modal
        async function viewCase(caseId) {
            try {
                const response = await fetch(`/api/admin/case/${caseId}`);
                const data = await response.json();
                
                if (data.success) {
                    const case_ = data.case;
                    const modalBody = document.getElementById('modalBody');
                    
                    // Format contract signature info
                    let contractInfo = 'Not signed';
                    if (case_.contract_acceptance) {
                        const signature = case_.contract_acceptance.signature || 'N/A';
                        const timestamp = case_.contract_acceptance.timestamp ? 
                            new Date(case_.contract_acceptance.timestamp).toLocaleString() : 'N/A';
                        const ip = case_.contract_acceptance.ip_address || 'N/A';
                        
                        contractInfo = `
                            <div class="contract-signature">
                                <div style="margin-bottom: 8px;"><strong>✅ Electronically Signed</strong></div>
                                <div style="font-size: 0.9rem; color: var(--text-secondary);">
                                    <div><strong>Signature:</strong> ${signature}</div>
                                    <div><strong>Date/Time:</strong> ${timestamp}</div>
                                    <div><strong>IP Address:</strong> ${ip}</div>
                                </div>
                            </div>
                        `;
                    }
                    
                    modalBody.innerHTML = `
                        <div class="detail-row">
                            <div class="detail-label">🆔 Case ID</div>
                            <div class="detail-value"><code>${case_.case_id}</code></div>
                        </div>
                        
                        <div class="detail-row">
                            <div class="detail-label">👤 Client Information</div>
                            <div class="detail-value">
                                <div><strong>Name:</strong> ${case_.contact_info?.fullName || 'N/A'}</div>
                                <div><strong>Email:</strong> ${case_.contact_info?.email || 'N/A'}</div>
                                <div><strong>Phone:</strong> ${case_.contact_info?.phone || 'N/A'}</div>
                            </div>
                        </div>
                        
                        <div class="detail-row">
                            <div class="detail-label">💼 Case Details</div>
                            <div class="detail-value">
                                <div><strong>Category:</strong> ${case_.case_details?.category || 'N/A'}</div>
                                <div style="margin-top: 10px;"><strong>Description:</strong></div>
                                <div style="margin-top: 5px; padding: 10px; background: rgba(6, 182, 212, 0.05); border-radius: 8px;">
                                    ${case_.case_details?.description || 'N/A'}
                                </div>
                                ${case_.case_details?.amount ? `<div style="margin-top: 10px;"><strong>Amount Involved:</strong> $${case_.case_details.amount}</div>` : ''}
                            </div>
                        </div>
                        
                        <div class="detail-row">
                            <div class="detail-label">📝 Contract Acceptance</div>
                            <div class="detail-value">
                                ${contractInfo}
                            </div>
                        </div>
                        
                        <div class="detail-row">
                            <div class="detail-label">📈 Status Information</div>
                            <div class="detail-value">
                                <div><strong>Case Status:</strong> <span class="status-badge status-${case_.status || 'submitted'}">${case_.status || 'Submitted'}</span></div>
                                <div style="margin-top: 8px;"><strong>Payment Status:</strong> <span class="status-badge status-${case_.payment_status || 'pending'}">${case_.payment_status || 'Pending'}</span></div>
                                <div style="margin-top: 8px;"><strong>Submitted:</strong> ${case_.timestamp ? new Date(case_.timestamp).toLocaleString() : 'N/A'}</div>
                                ${case_.payment_link ? `<div style="margin-top: 8px;"><strong>Payment Link:</strong> ${case_.payment_link.status === 'paid' ? '✅ Paid' : '⏳ Pending'}</div>` : ''}
                            </div>
                        </div>
                    `;
                    
                    // Show modal
                    document.getElementById('caseModal').style.display = 'block';
                } else {
                    alert('❌ Error loading case: ' + data.error);
                }
            } catch (error) {
                alert('❌ Error: ' + error.message);
            }
        }
        
        // Close modal
        function closeModal() {
            document.getElementById('caseModal').style.display = 'none';
        }
        
        // Close modal when clicking outside
        window.onclick = function(event) {
            const modal = document.getElementById('caseModal');
            if (event.target == modal) {
                modal.style.display = 'none';
            }
        }

        // View documents for a case
        async function viewDocuments(caseId) {
            try {
                const response = await fetch(`/api/admin/case/${caseId}`);
                const data = await response.json();
                
                if (data.success && data.case.documents && data.case.documents.length > 0) {
                    let docList = 'Documents:\n\n';
                    data.case.documents.forEach((doc, idx) => {
                        docList += `${idx + 1}. ${doc.filename} (${Math.round(doc.size / 1024)}KB)\n`;
                    });
                    docList += '\nClick OK to download the first document.';
                    
                    if (confirm(docList)) {
                        // Download first document
                        const firstDoc = data.case.documents[0];
                        const link = document.createElement('a');
                        link.href = `data:${firstDoc.type};base64,${firstDoc.data}`;
                        link.download = firstDoc.filename;
                        link.click();
                    }
                } else {
                    alert('No documents found for this case.');
                }
            } catch (error) {
                alert('❌ Error loading documents: ' + error.message);
            }
        }
        // Logout function
        async function logout() {
            const session = localStorage.getItem('admin_session');
            
            if (session) {
                try {
                    await fetch('/api/admin/logout', {
                        method: 'POST',
                        headers: {
                            'Authorization': 'Bearer ' + session
                        }
                    });
                } catch (error) {
                    console.error('Logout error:', error);
                }
            }
            
            localStorage.removeItem('admin_session');
            window.location.href = '/admin_login.html';
        }

        // Generate payment link for case
        async function generatePaymentLink(caseId) {
            const price = prompt('💵 Enter the price for this case (e.g., 149, 349, 699):');
            
            if (!price || isNaN(price)) {
                alert('❌ Invalid price');
                return;
            }
            
            try {
                const response = await fetch('/api/generate-payment-link', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({
                        case_id: caseId,
                        price: parseFloat(price)
                    })
                });
                
                const data = await response.json();
                
                if (data.success) {
                    alert(`✅ Payment link generated!\n\nFull URL:\n${data.full_url}\n\nLink copied to clipboard!`);
                    navigator.clipboard.writeText(data.full_url);
                    loadCases(); // Reload cases to show new button
                } else {
                    alert('❌ Error: ' + data.error);
                }
            } catch (error) {
                alert('❌ Error generating payment link: ' + error.message);
            }
        }
        
        // Copy payment link to clipboard
        function copyPaymentLink(token) {
            const paymentUrl = `https://turboresponsehq.onrender.com/payment.html?token=${token}`;
            navigator.clipboard.writeText(paymentUrl).then(function() {
                alert('✅ Payment link copied to clipboard!\n\n' + paymentUrl);
            }).catch(function(err) {
                alert('❌ Failed to copy: ' + err);
            });
        }

        // Copy to clipboard function
        function copyToClipboard(text) {
            navigator.clipboard.writeText(text).then(function() {
                alert('✅ Copied to clipboard: ' + text);
            }).catch(function(err) {
                alert('❌ Failed to copy: ' + err);
            });
        }
    </script>
    <!-- Turbo AI Chatbot -->
    <script src="chatbot.js"></script>
</body>
</html>

